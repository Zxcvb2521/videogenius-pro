name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ./playht-sdk/src

    - name: Lint with ruff
      run: |
        pip install ruff
        ruff check .

    - name: Test imports (smoke test)
      run: |
        python -c "from app import demo; print('✅ App imports OK')"
        python -c "from telegram_bot import upload_to_youtube; print('✅ Telegram bot imports OK')"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t videogenius-pro .

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push image to GHCR
      run: |
        docker tag videogenius-pro ghcr.io/${{ github.repository_owner }}/videogenius-pro:latest
        docker push ghcr.io/${{ github.repository_owner }}/videogenius-pro:latest
        
        - name: Generate API Docs
      run: |
        pip install mkdocs mkdocs-material
        mkdocs build --site-dir ./site

    - name: Deploy Docs to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
